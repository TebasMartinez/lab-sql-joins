USE sakila;

# 1 List the number of films per category.
SELECT name, COUNT(film_id)
FROM film_category
INNER JOIN category USING(category_id)
GROUP BY category_id;

# 2 Retrieve the store ID, city, and country for each store.
SELECT store_id, city, country
FROM store
INNER JOIN address USING(address_id)
INNER JOIN city USING(city_id)
INNER JOIN country USING(country_id)
GROUP BY store_id;

# 3 Calculate the total revenue generated by each store in dollars.
SELECT store_id, SUM(amount) 
FROM payment
INNER JOIN staff USING(staff_id)
GROUP BY store_id;

# 4 Determine the average running time of films for each category.
SELECT name, AVG(length)
FROM film
INNER JOIN film_category USING(film_id)
INNER JOIN category USING(category_id)
GROUP BY name;

# BONUS:
# 5 Identify the film categories with the longest average running time.
SELECT name, AVG(length)
FROM film
INNER JOIN film_category USING(film_id)
INNER JOIN category USING(category_id)
GROUP BY name
ORDER BY AVG(length) DESC;

# 6 Display the top 10 most frequently rented movies in descending order.
SELECT title, COUNT(rental_id) AS times_rented
FROM film
INNER JOIN inventory USING(film_id)
INNER JOIN RENTAL USING(inventory_id)
GROUP BY title
ORDER BY times_rented DESC
LIMIT 10;

# 7 Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT *
FROM film
INNER JOIN inventory USING(film_id)
WHERE store_id = 1 AND title = "Academy Dinosaur";

# 8 Provide a list of all distinct film titles, along with their availability status in the inventory. 
# Include a column indicating whether each title is 'Available' or 'NOT available.' 
# Note that there are 42 titles that are not in the inventory, 
# and this information can be obtained using a CASE statement combined with IFNULL."
SELECT DISTINCT title,
	CASE 
		WHEN inventory.film_id IS NULL THEN "Not Available"
		ELSE "Available"
	END AS availability_status
FROM film
LEFT JOIN inventory USING(film_id);

# EXTRA Are there any customers who have never rented anything? If so, SELECT first name and last name
SELECT first_name, last_name
FROM customer
WHERE customer_id NOT IN (SELECT customer_id FROM rental);

SELECT CASE
WHEN customer_id NOT IN (SELECT customer_id FROM rental) THEN first_name + last_name
ELSE "All customers have rented at least once"
END AS "Check inactive customers"
FROM customer;

# Show titles, duration and duration_category (short 60, 60-90 is medium, more than 90 is long)
SELECT title, length,
	CASE 
		WHEN length < 60 THEN "short"
		WHEN length BETWEEN 60 AND 90 THEN "medium"
        WHEN length > 90 THEN "long"
	END AS "duration_category"
FROM film;